version: '3.8'

services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/carebridge
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped
    networks:
      - carebridge-network

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:80"
    depends_on:
      - api
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - carebridge-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=carebridge
    restart: unless-stopped
    networks:
      - carebridge-network

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - carebridge-network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - web
    restart: unless-stopped
    networks:
      - carebridge-network

networks:
  carebridge-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: